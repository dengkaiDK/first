#include<stdio.h>
#include<math.h> 
int main()
{
	int i,j,n,k,count=1,index,sum,b[10000]={1},logic=0;float a[10000]={0},result,temp=0;
	scanf("%d%d",&n,&k);
	for(i=1;i<=n;i++)
		{
		scanf("%f",&a[i]);//保存绳子长度，最多不超过10000根，且长度在1~100000米之间 
		if(a[i]<1.00||a[i]>100000.00)
		{
		 return 1;
		}
		}
	for(i=1;i<n;i++)
	    {
		for(j=i+1;j<=n;j++)
			{
			if(a[i]<a[j])
			{
				temp=a[j];
				a[j]=a[i];
				a[i]=temp;
			}
			}
		}//数组排序
	if(n>=k)
	{
		index=k;
		for(i=1;i<=index;)
		{
			if(a[i]/2>=a[index-count+1]&&a[i]/2>=a[i+1])
			{
				a[i]=a[i]/2;count=2*count;//若最大数的一半比目前k个数中最小的大，且大于次大数，则除二 
			}
			if(a[i]/2>=a[index-count+1]&&a[i]/2<a[i+1])//若小于次大数，则统计当前分解后的总数 
			{
				a[i]=a[i]/2;count=2*count;b[i]=count;
				i++;
				index=index-count+1;//调整数组下标 
				count=1;//下一个数，将计量数归零 
			}
			if(a[i]/2<a[index-count+1])
			{
				break;//如果不小于当前最小数，则退出 
			}
		}
		sum=0;
		i=1;
		while(sum<k)
		{
			sum+=b[i];
			i++;
		}
		i--;
		result=a[i]/b[i];
		printf("%.2f\n",result);
	}
	else{
		index=n;
		sum=n;
		for(i=1;sum<k||a[i]/b[i]>0.01;)
		{
			if(a[i]/2>=a[index]&&a[i]/2>=a[i+1])//初始条件下，count计数，初值为1 
			{
				a[i]=a[i]/2;count=2*count;//若最大数的一半比目前k个数中最小的大，且大于次大数，则除二 
			}
			if(a[i]/2>=a[index]&&a[i]/2<a[i+1]&&logic==0)//若小于次大数，则统计当前分解后的总数 
			{
				a[i]=a[i]/2;count=2*count;b[i]=count;
				i++;
				sum+=count-1;//统计产生的绳子数 
				count=1;//下一个数，将计量数归零 
			}
			if(a[i]/2>=a[index]&&a[i]/2<a[i+1]&&logic==1) 
			{
				a[i]=a[i]/2;count=count*2;
				sum+=count-b[i];
				b[i]=count;//统计完新增数后，将下标往下移，赋新值给b，同时count赋值为下一位的历史数据 
				i++;
				count=b[i];
			}
			if(a[i]/2<a[index]&&logic==0)
			{
				a[i]=a[i]/2;count=2*count;
				b[i]=count;
				i++;
				sum+=count-1;
				count=1;
			}
			if(a[i]/2<a[index]&&logic==1)
			{
				a[i]=a[i]/2;count=2*count;
				sum+=count-b[i];
				b[i]=count;
				i++;
				count=b[i];
			}
			if(i==index)
			{
				a[index]=a[index]/2;
				sum+=2*b[index]-b[index];//先计算新增数值，再赋值给b[index] 
				b[index]=b[index]*2;//将最小值除二，并且将下标指向一
				i=1;
				logic=1;//逻辑值归为1 
				count=b[1];//计数进入新一轮，将数值赋值为上一轮最大数的个数 
			}
		}
		if(i==1)
		{
			result=a[n]/b[n];
			printf("%.2f\n",result);
		}
		else{
			result=a[i-1]/b[i-1];
			printf("%.2f\n",result);
		}
	}
	return 1;
}
